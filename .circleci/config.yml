version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0
  terraform: circleci/terraform@3.2.0
  go: circleci/go@1.11.0
  
jobs:
  build_and_test:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            ls
            pwd
            cd src
            docker-compose build
      - run:
          name: Run Docker Compose
          command: |
            cd src
            docker-compose down
            docker-compose --compatibility up -d
      - run:
          name: Wait for Services to Start
          command: sleep 3
      - run:
          name: Run Tests
          command: |
            cd src
            docker ps 
            # bash ./tests/unittest.sh
      - run:
          name: Notify Discord of Success
          when: on_success
          command: |
            curl -H "Content-Type: application/json" -X POST -d '{"content": "Build and tests succeeded for project kojoey/weather"}' $DISCORD_WEBHOOK_URL
      - run:
          name: Notify Discord of Failure
          when: on_fail
          command: |
            curl -H "Content-Type: application/json" -X POST -d '{"content": "Build and tests failed for project kojoey/weather"}' $DISCORD_WEBHOOK_URL
      - run:
          name: Docker Compose Down
          command: |
            cd src
            docker-compose down

  publish:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            cd src
            docker-compose build
      - run:
          name: Login to GitLab Container Registry
          command: |
            echo $GITLAB_TOKEN | docker login -u $GITLAB_USER --password-stdin $GITLAB_REGISTRY
      - run:
          name: Tag and Push Docker Image
          command: |
            IMAGE_NAME=${GITLAB_REGISTRY}/${GITLAB_PROJECT}:latest
            docker tag src_gunicorn:latest $IMAGE_NAME
            docker push $IMAGE_NAME
            
  terraform:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - aws-cli/setup
      - terraform/install
      - go/install:
          version: "1.18"
          
      - run:
          name: Install Dependencies
          command: |
            apt-get update && apt-get install -y python3-pip
            pip3 install checkov
            
      - run:
          name: Checkov - Scan Terraform Code
          command: checkov -d ./terraform/eks --skip-check CKV_TF_1,CKV_TF_2
          
      - terraform/init:
          path: ./terraform/eks
          
      - run:
          name: Initialize Go Module
          command: |
            cd terraform/eks/tests
            go mod init terraform-eks-tests
            go get github.com/gruntwork-io/terratest/modules/terraform
            go get github.com/stretchr/testify/assert
            
      - run:
          name: TerraTest
          command: |
            cd terraform/eks/tests
            go test -v
      # - terraform/plan:
      #     path: ./terraform/eks
      # - terraform/apply:
      #     path: ./terraform/eks

workflows:
  version: 2
  weather:
    jobs:
      # - build_and_test
      # - publish:
      #     requires:
      #       - built_and_test
      - terraform
