name: Tag version

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install bump2version
        run: pip install bump2version

      - name: Configure Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Determine version bump
        id: get_bump
        run: |
          if git log -1 --pretty=%B | grep -q '\[MAJOR\]'; then
            echo "bump=major" >> $GITHUB_ENV
          elif git log -1 --pretty=%B | grep -q '\[MINOR\]'; then
            echo "bump=minor" >> $GITHUB_ENV
          else
            echo "bump=patch" >> $GITHUB_ENV
        env:
          GITHUB_ENV: ${{ github.env_path }}

      - name: Bump version
        run: |
          bump2version ${{ env.bump }}
          echo "new_version=$(bump2version --dry-run --list | grep new_version | sed -r 's/^.*new_version=//')" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Push changes and tags
        run: |
          git push origin --tags
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          tag_name: v${{ env.new_version }}
          release_name: Weather v${{ env.new_version }}
          draft: false
          prerelease: false
